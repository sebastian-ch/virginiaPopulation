{"version":3,"sources":["vaNum.geojson","dissolve.geojson","App.js","index.js"],"names":["mapboxgl","accessToken","App","id","mapContainer","useRef","map","useState","lng","lat","zoom","countyName","setCountyName","title","setTitle","vpop2020","setPop2020","vpop2010","setPop2010","vpopChange","setPopChange","useEffect","current","Map","container","style","center","dragPan","on","firstSymbolId","layers","getStyle","i","length","type","fetch","dissolved","then","resp","json","data","bbox1","mask","addLayer","addSource","source","e","console","log","features","properties","Locality","toLocaleString","className","onClick","setPaintProperty","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fe41958.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vaNum.11b4230b.geojson\";","export default __webpack_public_path__ + \"static/media/dissolve.9bfcdcb1.geojson\";","import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport {mask} from '@turf/turf'\nimport data from './vaNum.geojson'\nimport dissolved from './dissolve.geojson'\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2ViYXN0aWFuLWNoIiwiYSI6ImNpejkxdzZ5YzAxa2gyd21udGpmaGU0dTgifQ.IrEd_tvrl6MuypVNUGU5SQ';\n\n\nfunction App() {\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-79.1);\n  const [lat, setLat] = useState(37.7);\n  const [zoom, setZoom] = useState(6.5);\n  const [countyName, setCountyName] = useState();\n  const [title, setTitle] = useState('Population in 2020');\n  const [vpop2020, setPop2020] = useState()\n  const [vpop2010, setPop2010] = useState()\n  const [vpopChange, setPopChange] = useState()\n\n  var id;\n  \n\n  useEffect(() => {\n\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/light-v10',\n      center: [lng, lat],\n      zoom: zoom,\n      dragPan: false\n    });\n\n\n\n    map.current.on('load', () => {\n\n\n\n\n      //find the first symbol layer so I can put the geojson's under its\n      const layers = map.current.getStyle().layers;\n      var firstSymbolId;\n        for (var i = 0; i < layers.length; i++) {\n          if (layers[i].type === 'symbol') {\n            firstSymbolId = layers[i].id;\n            break;\n          }\n      }\n\n\n      //add the mask layer\n      //slightly unnecessary, but I wanted to play with turf mask and it's really cool!\n      fetch(dissolved)\n        .then(resp => resp.json())\n        .then(data => {\n      \n          const bbox1 = mask(data);\n\n            map.current.addLayer({\n              'id': 'mask',\n              'type': 'fill',\n              'source': {\n                  'type': 'geojson',\n                  'data': bbox1\n              },\n              'layout': {},\n              'paint': {\n                  'fill-color': 'gray',\n                  'fill-opacity': 0.8\n              }\n          }, firstSymbolId\n          );\n        })\n\n\n\n       \n      map.current.addSource('countries', {\n        type: 'geojson',\n        data\n      })\n\n\n      //add fill layer\n      map.current.addLayer(\n        {\n          id: 'va',\n          type: 'fill',\n          source: 'countries',\n          'paint': {\n            \n            'fill-color': [\n              'interpolate',\n              ['linear'],\n              ['get', '2020pop'],\n              0, \"#d7d7d7\",\n              49448, '#A1ABC0',\n              137739, '#6B80A9',\n              247564, '#355492',\n              1146200, '#00297b'\n        \n            ],\n            'fill-opacity': 0.75\n            }\n        }, firstSymbolId\n      );\n\n\n      //add outlines of counties\n      map.current.addLayer(\n        {\n          'id': 'outline',\n          'type': 'line',\n          'source': 'countries',\n          'paint': {\n            'line-color': [\n              'interpolate',\n              ['linear'],\n              ['get', '2020pop'],\n              0, \"#d7d7d7\",\n              49448, '#A1ABC0',\n              137739, '#6B80A9',\n              247564, '#355492',\n              1146200, '#00297b'\n        \n            ]\n          }\n        }, firstSymbolId\n      );\n\n    });\n\n    map.current.on('mousemove', 'va', (e) => {\n\n      console.log(id)\n     \n      setCountyName(e.features[0].properties.Locality)\n      setPop2020(e.features[0].properties['2020pop'].toLocaleString())\n      setPop2010(e.features[0].properties['2010pop'].toLocaleString())\n      setPopChange(e.features[0].properties['NumCh2010'].toLocaleString())\n\n    /*  new mapboxgl.Popup()\n        .setLngLat(e.lngLat)\n        .setHTML(e.features[0].properties.Locality)\n        .addTo(map.current) */\n\n    })\n\n    map.current.on('mouseout', 'va', (e) => {\n\n      setCountyName()\n      setPop2020()\n      setPop2010()\n      setPopChange()\n    \n      \n    }) \n\n\n  });\n\n\n  function pop2020() {\n\n    var id = '2020pop';\n    console.log(id)\n\n    map.current.setPaintProperty('va', 'fill-color',\n    [\n      'interpolate',\n      ['linear'],\n      ['get', id],\n      0, \"#d7d7d7\",\n      49448, '#A1ABC0',\n      137739, '#6B80A9',\n      247564, '#355492',\n      1146200, '#00297b'\n\n    ]);\n\n    map.current.setPaintProperty('outline', 'line-color',\n    [\n      'interpolate',\n      ['linear'],\n      ['get', id],\n      0, \"#d7d7d7\",\n      49448, '#A1ABC0',\n      137739, '#6B80A9',\n      247564, '#355492',\n      1146200, '#00297b'\n\n    ]);\n\n\n    setTitle('Population in 2020')\n  \n\n  }\n\n\n  function pop2010(){\n\n\n    id = '2010pop'\n    console.log(id)\n\n\n    map.current.setPaintProperty('va', 'fill-color',\n    [\n      'interpolate',\n      ['linear'],\n      ['get', id],\n      0, \"#d7d7d7\",\n      46689, '#A1ABC0',\n      122397, '#6B80A9',\n      242803, '#355492',\n      437994, '#00297b'\n\n    ]);\n\n    map.current.setPaintProperty('outline', 'line-color',\n    [\n      'interpolate',\n      ['linear'],\n      ['get', id],\n      0, \"#d7d7d7\",\n      46689, '#A1ABC0',\n      122397, '#6B80A9',\n      242803, '#355492',\n      437994, '#00297b'\n\n    ]);\n\n\n    setTitle('Population in 2010')\n  \n  }\n\n  function popChangeSince2010() {\n\n\n    id = 'NumCh2010'\n\n    map.current.setPaintProperty('va', 'fill-color',\n    [\n      'interpolate',\n      ['linear'],\n      ['get', id],\n      -3647, \"#ff350f\",\n      0, \"#ccc\",\n      106379, '#00297b'\n\n    ]);\n\n\n    map.current.setPaintProperty('outline', 'line-color',\n    [\n      'interpolate',\n      ['linear'],\n      ['get', id],\n      -3647, \"#ff350f\",\n      0, \"#ccc\",\n      106379, '#00297b'\n\n    ]);\n\n\n\n    setTitle('Population Change Since 2010')\n\n\n  }\n\n\n  \n  return (\n    <div className=\"App\">\n      <div className=\"sidebar\">\n        <div className='words'>\n          <b><h3>Map Currently Showing {title} </h3></b><br></br>\n          County Name: {countyName} <br></br>\n          Population 2020: {vpop2020} <br></br>\n          Population 2010: {vpop2010} <br></br>\n          Population Change: {vpopChange} <br></br>\n          <div className='allButtons'>\n            <button onClick={pop2020} className='button'>Population in 2020</button> <br></br>\n            <button onClick={pop2010} className='button'>Population in 2010</button> <br></br>\n            <button onClick={popChangeSince2010} className='button'>Pop change since 2010</button><br></br>\n          </div> \n\n       </div>\n      </div>\n      <div ref={mapContainer} className=\"map-container\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}